// You can edit this code!
// Click here and start typing.
package main

import (
	"encoding/json"
	"fmt"

	"github.com/olivere/elastic/v7"
)

type AggregationsResp struct {
	DocCountErrorUpperBound int `json:"doc_count_error_upper_bound"`
	SumOtherDocCount        int `json:"sum_other_doc_count"`
	Buckets                 []struct {
		Key      string `json:"key"`
		DocCount int    `json:"doc_count"`
	} `json:"buckets"`
}

func main() {
	b := []byte{123, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 95, 101, 114, 114, 111, 114, 95, 117, 112, 112, 101, 114, 95, 98, 111, 117, 110, 100, 34, 58, 50, 52, 57, 55, 55, 54, 54, 55, 49, 44, 34, 115, 117, 109, 95, 111, 116, 104, 101, 114, 95, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 49, 50, 50, 57, 56, 54, 53, 56, 56, 48, 54, 44, 34, 98, 117, 99, 107, 101, 116, 115, 34, 58, 91, 123, 34, 107, 101, 121, 34, 58, 34, 100, 105, 97, 108, 111, 103, 117, 101, 45, 109, 97, 110, 97, 103, 101, 114, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 51, 55, 56, 54, 53, 56, 51, 51, 52, 57, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 116, 114, 97, 100, 101, 45, 115, 101, 114, 118, 101, 114, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 49, 54, 54, 53, 55, 56, 51, 51, 53, 51, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 99, 101, 109, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 49, 49, 50, 57, 50, 51, 53, 54, 50, 56, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 97, 118, 101, 110, 117, 101, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 56, 56, 53, 52, 49, 49, 54, 52, 57, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 115, 116, 97, 116, 115, 45, 114, 101, 112, 111, 114, 116, 101, 114, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 56, 55, 50, 50, 55, 50, 52, 57, 48, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 109, 111, 110, 101, 116, 97, 45, 116, 97, 103, 45, 115, 101, 114, 118, 105, 99, 101, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 56, 52, 50, 53, 48, 49, 48, 56, 51, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 105, 116, 101, 109, 45, 115, 101, 114, 118, 101, 114, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 56, 49, 51, 55, 57, 56, 55, 55, 54, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 115, 101, 115, 115, 105, 111, 110, 45, 109, 97, 110, 97, 103, 101, 114, 45, 106, 97, 118, 97, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 55, 53, 49, 54, 48, 48, 48, 52, 53, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 108, 120, 107, 45, 100, 114, 101, 100, 103, 101, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 54, 53, 52, 54, 48, 52, 48, 51, 52, 125, 44, 123, 34, 107, 101, 121, 34, 58, 34, 97, 115, 115, 105, 115, 116, 111, 114, 34, 44, 34, 100, 111, 99, 95, 99, 111, 117, 110, 116, 34, 58, 53, 51, 53, 52, 57, 52, 50, 57, 56, 125, 93, 125}
	fmt.Println(b)
	fmt.Println(string(b))
	var r AggregationsResp
	json.Unmarshal(b, &r)
	fmt.Println(r)

	s := elastic.NewSearchSource().
    Query(elastic.NewBoolQuery()).
	  Aggregation("lalala_agg", elastic.NewTermsAggregation().Field("appname"))
	j, err := s.Source()
	fmt.Println(err)
	fmt.Println(j)
	m, err := json.Marshal(j)
	fmt.Println(err)
	fmt.Println(m)
  fmt.Println(string(m))
}
